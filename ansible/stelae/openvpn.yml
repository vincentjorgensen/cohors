---
Description: OpenVPN Server
Parameters:
  AppName:
    Description: Cohors application name
    Type: String
  PublicDnsZone:
    Description: Public-facing DNS Zone
    Type: String
  CohorsSecurityGroup:
    Description: VPC security group
    Type: AWS::EC2::SecurityGroup::Id
  Environs:
    Description: Prod or Dev (non-production)
    Type: String
    Default: dev
    AllowedValues:
    - prod
    - dev
  ExternalRouteTableId:
    Description: Public route table
    Type: AWS::EC2::RouteTable::Id
  ImageId:
    Description: EC2 image id
    Type: AWS::EC2::Image::Id
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
  InternalRouteTableId:
    Description: Private route table
    Type: AWS::EC2::RouteTable::Id
  KeyName:
    Description: Existing EC2 KeyPair for SSH
    Type: AWS::EC2::KeyPair::KeyName
  Region:
    Description: AWS EC2 Region
    Type: String
    Default: us-west-2
    AllowedValues:
    - us-west-1
    - us-west-2
    - us-east-1
    - eu-west-1
    - eu-central-1
    - ap-southeast-1
    - ap-southeast-2
    - ap-northeast-1
    - ap-northeast-2
    - sa-east-1
  SecondVpnOctet:
    Description: Second Octet
    Type: String
  SubnetId:
    Description: EC2 subnet id for VPN server
    Type: AWS::EC2::Subnet::Id
  VpcId:
    Description: VPC Id for Cohors column
    Type: AWS::EC2::VPC::Id
Resources:
  VpnInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Ref: ImageId
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroupIds:
      - Ref: SecurityGroup
      - Ref: CohorsSecurityGroup
      SourceDestCheck: 'False'
      SubnetId:
        Ref: SubnetId
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId:
        Ref: VpnInstance
      Domain: vpc
  VpnServerDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName:
        Ref: PublicDnsZone
      Name:
        Fn::Join:
        - ''
        - - Ref: Region
          - '-'
          - Ref: Environs
          - -vpn
          - "."
          - Ref: PublicDnsZone
      ResourceRecords:
      - Ref: ElasticIp
      TTL: 300
      Type: A
  # VPN client access server routes
  IntRouteTableEntry:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondVpnOctet
          - '.0.0/16'
      InstanceId:
        Ref: VpnInstance
      RouteTableId:
        Ref: InternalRouteTableId
  ExtRouteTableEntry:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock:
        Fn::Join:
        - ''
        - - '10.'
          - Ref: SecondVpnOctet
          - '.0.0/16'
      InstanceId:
        Ref: VpnInstance
      RouteTableId:
        Ref: ExternalRouteTableId
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: vpn-access-sg
      SecurityGroupEgress: []
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: UDP
        FromPort: '1194'
        ToPort: '1195'
      - CidrIp: 10.0.0.0/8
        IpProtocol: -1
        FromPort: '-1'
        ToPort: '-1'
      Tags:
      - Key: Name
        Value: vpn-access-sg
      VpcId:
        Ref: VpcId
Outputs:
  ExternalIp:
    Value:
      Ref: ElasticIp
